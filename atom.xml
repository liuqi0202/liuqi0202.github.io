<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://liuqi0202.github.io</id>
    <title>DaQi-git</title>
    <updated>2021-01-23T16:12:16.485Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://liuqi0202.github.io"/>
    <link rel="self" href="https://liuqi0202.github.io/atom.xml"/>
    <subtitle>I may be slow.</subtitle>
    <logo>https://liuqi0202.github.io/images/avatar.png</logo>
    <icon>https://liuqi0202.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, DaQi-git</rights>
    <entry>
        <title type="html"><![CDATA[翻译100页以上的PDF]]></title>
        <id>https://liuqi0202.github.io/post/fan-yi-100-ye-yi-shang-de-pdf/</id>
        <link href="https://liuqi0202.github.io/post/fan-yi-100-ye-yi-shang-de-pdf/">
        </link>
        <updated>2021-01-23T15:59:26.000Z</updated>
        <content type="html"><![CDATA[<p>偶然想看看Manjaro的官方文档，尽管知道是英文的，但是有翻译软件、在线翻译什么的感觉不会有困难，结果发现PDF文件即便在线查看也不提供翻译服务。于是去看看有没有比较简单的翻译PDF的服务，搜搜看看的都需要花钱。免费的一般都限制页数或文件大小。</p>
<p>[TOC]</p>
<h3 id="1-用google翻译">1、用google翻译</h3>
<p>里面有个[文件翻译]: https://translate.google.cn/?sl=auto&amp;tl=zh-CN&amp;op=docs	太好了，而且不用梯子就能上传，还很快，但是下载需要梯子😂</p>
<p><img src="https://liuqi0202.github.io/post-images/1611417832958.png" alt="" loading="lazy"><br>
<img src="https://liuqi0202.github.io/post-images/1611417844928.png" alt="" loading="lazy"><br>
然后挂梯子一看翻译成了HTML，另存为下载了，发现图都没有了，而且质量真不行啊！</p>
<p><img src="https://liuqi0202.github.io/post-images/1611417868527.png" alt="" loading="lazy"><br>
<img src="https://liuqi0202.github.io/post-images/1611417886584.png" alt="" loading="lazy"></p>
<h3 id="2-doctranslator">2、doctranslator</h3>
<p>大的PDF需要切割PDF，满足网站的要求，然后在拼接，能保持原图原位置。</p>
<p>我是懒得切割然后一个个上传等待下载，最后再一个个拼接。</p>
<p>无需登陆注册什么的，应该还行吧。</p>
<h3 id="3-用ms-office的word推荐选择">3、用Ms office的WORD（推荐选择）</h3>
<p>先用word打开pdf，然后另存为word文件docx，在审阅里直接选翻译-翻译文档-语言选择什么的直接默认，点翻译等会儿会生成一个新的中文docx文件，保存即可。整体还是很快的，比前两种都方便快捷。我觉着翻译的质量比google那个强，排版也很棒！<br>
<img src="https://liuqi0202.github.io/post-images/1611417899863.png" alt="" loading="lazy"><br>
<img src="https://liuqi0202.github.io/post-images/1611417904718.png" alt="" loading="lazy"><br>
<img src="https://liuqi0202.github.io/post-images/1611417907669.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ 静态网页支持Markdown和Mermaid]]></title>
        <id>https://liuqi0202.github.io/post/jing-tai-wang-ye-zhi-chi-markdown-he-mermaid/</id>
        <link href="https://liuqi0202.github.io/post/jing-tai-wang-ye-zhi-chi-markdown-he-mermaid/">
        </link>
        <updated>2021-01-21T15:39:03.000Z</updated>
        <content type="html"><![CDATA[<p>试用了一些PC版笔记类软件能很好的支持Markdown和Mermaid，但是发布到HTML网页中Mermaid就无法显示了，手机端的App也支持不好Mermaid。<br>
我很喜欢用Mermaid写流程图、甘特图，所以搜索了一些相关文章找到了答案。<br>
<a href="https://liuqi0202.github.io/post/ceshi/">效果</a><br>
首先要更改网站发布模板的代码：<br>
将以下代码复制到发布模板中</body>的后面，script的加载执行会影响点速度。<br>
我把第一句中的src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mermaid/8.8.4/mermaid.min.js版本改了一下，改成了8.8.4，能很好的解释Mermaid语句。用手机浏览器观看效果也很好。</p>
<pre><code class="language-html">        &lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mermaid/8.8.4/mermaid.min.js&quot;&gt;&lt;/script&gt;
        &lt;script&gt;
            var config = {
                startOnLoad:true,
                flowchart:{
                    useMaxWidth:false,
                    htmlLabels:true
                }
            };
            mermaid.initialize(config);
            $(function(){
                var elements = document.getElementsByClassName(&quot;language-mermaid&quot;);
                for (var i = elements.length; i--;) {
                    element = elements[i];
                    var graphDefinition = element.innerText;
                    if (graphDefinition) {
                        var svg = mermaid.render('ha_mermaid_' + i, graphDefinition, function(svg){});
                        if (svg) {
                            var svgElement = document.createElement('div');
                            preNode = element.parentNode;
                            svgElement.innerHTML = svg;
                            svgElement.setAttribute('class', 'mermaid');
                            svgElement.setAttribute('data-processed', 'true');
                            preNode.parentNode.replaceChild(svgElement, preNode);
                        }
                    }
                }
            });
        &lt;/script&gt;
</code></pre>
<p>参考资料：<br>
https://zhiqiwang.github.io/adding-mermaid-support-in-gridea/#how-to-use-mermaid</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Work arrangements]]></title>
        <id>https://liuqi0202.github.io/post/ceshi/</id>
        <link href="https://liuqi0202.github.io/post/ceshi/">
        </link>
        <updated>2021-01-21T13:08:01.000Z</updated>
        <content type="html"><![CDATA[<p>仅做测试用</p>
<div class="mermaid">
gantt
    title 甘特图测试
    dateFormat  YYYY-MM-DD
    section 常规工作
    审核材料:2021-01-06,2021-01-12
    系统开放:2021-01-08,2021-01-21
    递交材料:2021-01-08,2021-01-22
    section 整理统计
    等待消息 : 2021-01-16,2021-01-22
    四季度统计:crit,2021-01-21,4d
    </div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Manjaro配置flameshot全局快捷键的方法及解决截图无法保存报错]]></title>
        <id>https://liuqi0202.github.io/post/manjaro-pei-zhi-flameshot-quan-ju-kuai-jie-jian-de-fang-fa-ji-jie-jue-jie-tu-wu-fa-bao-cun-bao-cuo/</id>
        <link href="https://liuqi0202.github.io/post/manjaro-pei-zhi-flameshot-quan-ju-kuai-jie-jian-de-fang-fa-ji-jie-jue-jie-tu-wu-fa-bao-cun-bao-cuo/">
        </link>
        <updated>2021-01-11T11:15:30.000Z</updated>
        <content type="html"><![CDATA[<p>参考：</p>
<p>https://www.djc8.cn/archives/manjaro-uses-flashshot-as-a-screenshot-tool.html</p>
<p>并进行了一点更改。</p>
<p>先到github上找一下flameshot-shortcuts-kde下载到桌面</p>
<p>1、在桌面上新建一个文本文件</p>
<p>2、到下面网页里复制相关代码</p>
<p>https://github.com/flameshot-org/flameshot/blob/master/docs/shortcuts-config/flameshot-shortcuts-kde</p>
<p>3、自行复制代码,并保存文件，命名flameshot-shortcuts-kde</p>
<p>4、然后进入设置页面选择快捷键-&gt;自定义快捷键-&gt;在KMenuEdit树节点上选中，在Edit下拉框中选择Import.</p>
<figure data-type="image" tabindex="1"><img src="https://liuqi0202.github.io/post-images/1610363847751.jpg" alt="" loading="lazy"></figure>
<p>5、我这里已经是全局printSc可以直接用了。</p>
<figure data-type="image" tabindex="2"><img src="https://liuqi0202.github.io/post-images/1610363892898.jpg" alt="" loading="lazy"></figure>
<p>没有条件</p>
<figure data-type="image" tabindex="3"><img src="https://liuqi0202.github.io/post-images/1610363933710.jpg" alt="" loading="lazy"></figure>
<p>take screenshot 的触发器 和 动作</p>
<figure data-type="image" tabindex="4"><img src="https://liuqi0202.github.io/post-images/1610363940426.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://liuqi0202.github.io/post-images/1610363947960.jpg" alt="" loading="lazy"></figure>
<p>take screenshot with delay的触发器 和 动作</p>
<figure data-type="image" tabindex="6"><img src="https://liuqi0202.github.io/post-images/1610363955016.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://liuqi0202.github.io/post-images/1610363961063.jpg" alt="" loading="lazy"></figure>
<p>take full-screen screenshot and save的触发器 和 动作</p>
<figure data-type="image" tabindex="8"><img src="https://liuqi0202.github.io/post-images/1610363971153.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://liuqi0202.github.io/post-images/1610363980069.jpg" alt="" loading="lazy"></figure>
<p>take full-screen screenshot and sopy it to clipboard的触发器 和 动作</p>
<figure data-type="image" tabindex="10"><img src="https://liuqi0202.github.io/post-images/1610363991666.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="11"><img src="https://liuqi0202.github.io/post-images/1610363998282.jpg" alt="" loading="lazy"></figure>
<h3 id="现在直接按prtscn就可以截图了对于要截取按alt按键会弹出菜单的或者弹出菜单后无法截图的情况可以ctrlprtscn延迟3秒截图-也可以提前打开flameshot启动器设置个延时2秒截取效果非常好太爽了">现在直接按PrtScn就可以截图了，对于要截取按Alt+按键会弹出菜单的或者弹出菜单后无法截图的情况，可以Ctrl+PrtScn，延迟3秒截图。也可以提前打开flameshot启动器，设置个延时2秒，截取效果非常好，太爽了！</h3>
<p>我在windows平台还没有这里理想的体验，尤其win10，到处不爽。</p>
<h1 id="flameshot截图保存报错">flameshot截图保存报错</h1>
<figure data-type="image" tabindex="12"><img src="https://liuqi0202.github.io/post-images/1610364014620.jpg" alt="" loading="lazy"></figure>
<p>根据提示到用户目录依次建立Pictures文件夹Screenshots文件夹</p>
<p>/home/user/Pictures/Screenshots/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Manjaro KDE 选择plasma风格后桌面特效消失]]></title>
        <id>https://liuqi0202.github.io/post/manjaro-kde-xuan-ze-plasma-feng-ge-hou-zhuo-mian-te-xiao-xiao-shi/</id>
        <link href="https://liuqi0202.github.io/post/manjaro-kde-xuan-ze-plasma-feng-ge-hou-zhuo-mian-te-xiao-xiao-shi/">
        </link>
        <updated>2021-01-11T11:14:50.000Z</updated>
        <content type="html"><![CDATA[<p>解决这个问题参考了</p>
<p>plasma桌面特效无效的解决办法</p>
<p>https://blog.csdn.net/u011054333/article/details/53653506</p>
<p>KDE桌面无故特效消失和图标黑底</p>
<p>https://www.cnblogs.com/weilinfox/p/13431272.html</p>
<p>这个问题是桌面特效混成器的设置改变引起的。打开“系统设置-&gt;硬件-&gt;显示和监控-&gt;混成器”，可以发现有问题的桌面将“渲染后端”设置为了“OpenGL 2.0”，我们只需要把它设置为“OpenGL 3.1”即可解决该问题。</p>
<p>另外，也因为桌面配置文件出现问题，默认的桌面是中文桌面两个字，改为微风风格后桌面指向的文件夹为Desktop，文件管理器里找一下，桌面文件都在。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Manjaro 音频配置（耳机孔被插死，无法拔出）]]></title>
        <id>https://liuqi0202.github.io/post/manjaro-yin-pin-pei-zhi-er-ji-kong-bei-cha-si-wu-fa-ba-chu/</id>
        <link href="https://liuqi0202.github.io/post/manjaro-yin-pin-pei-zhi-er-ji-kong-bei-cha-si-wu-fa-ba-chu/">
        </link>
        <updated>2021-01-11T10:50:08.000Z</updated>
        <content type="html"><![CDATA[<p>解除所有音频输出设备为“不静音”状态</p>
<pre><code class="language-shell">[a@a-L440 ~]$ amixer sset Master unmute 
Simple mixer control 'Master',0 
Capabilities: pvolume pswitch pswitch-joined 
Playback channels: Front Left - Front Right 
Limits: Playback 0 - 65536 
Mono: 
Front Left: Playback 65536 [100%] [on] 
Front Right: Playback 65536 [100%] [on] 
</code></pre>
<p>调出alsmixer音频设备管理器，对每一路设备进行调试</p>
<pre><code class="language-shell"> [a@a-L440 ~]$ alsamixer
</code></pre>
<p>master设为100</p>
<p>headphone设为MM 禁用</p>
<p>speaker设为100</p>
<p>PCM 设为100</p>
<p>MIC设为MM</p>
<p>Auto-Mute Modes设为MM</p>
<p>用命令：</p>
<pre><code class="language-shell">[a@a-L440 ~]$ alsamixer auto-mute disabled
</code></pre>
<p>但是重启系统后<code>alsamixer</code> 声音设置好后，重启又重新变为启动自动静音，用root执行，以后就默认取消自动静音了</p>
<pre><code class="language-shell">[a@a-L440 ~]$ sudo alsactl store
</code></pre>
<p>参考资料：</p>
<p>https://superuser.com/questions/431079/how-to-disable-auto-mute-mode</p>
<p>在执行sudo alsactl store 这命令以后,如果正常关机就可以保存alsamixer的音量,但是如果等执行了那条命令以后立即断电以后就保存不了,后来我测试了下,总结了这两个规律,一个是要等执行那条命令以后再等48秒然后断电就可以保存了,二个就是用vim /var/lib/alsa/asound.state到这个文件里面,然后不做任何修改直接wq保存,然后立即断电启动以后也可以保存.问下大家这个问题怎么解决,之前好象只要一执行保存命令就可以马上保存了.如果不按上面那两条规律做的话,有可能出现asound.state这文件在断电启动以后被删除,然后alsamixer里面master 和pcm的音量都为81.有可能出现文件是空的.然后alsamixer里面master=55 和pcm=74.<br>
<img src="https://liuqi0202.github.io/post-images/1610363230104.jpg" alt="" loading="lazy"></p>
<figure data-type="image" tabindex="1"><img src="https://liuqi0202.github.io/post-images/1610363326100.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://liuqi0202.github.io/post-images/1610363359073.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://liuqi0202.github.io/post-images/1610363366869.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://liuqi0202.github.io/post-images/1610363380725.jpg" alt="" loading="lazy"></figure>
<h3 id="结论这时候扬声器已经能够出声音了但是内置的麦克依然不能用">结论：这时候扬声器已经能够出声音了，但是内置的麦克依然不能用。</h3>
<p>期间也尝试了一些命令来解决问题</p>
<p>查看音频设备</p>
<pre><code class="language-shell"> [a@a-L440 ~]$ aplay -l
</code></pre>
<p>测试音频</p>
<pre><code class="language-shell"> [a@a-L440 ~]$ speaker-test
</code></pre>
<p>音频选项</p>
<pre><code class="language-sh"> [a@a-L440 ~]$ alsamixer
</code></pre>
<p>结束启动服务</p>
<pre><code class="language-shell">[a@a-L440 ~]$ pulseaudio -k
[a@a-L440 ~]$ pulseaudio --start
</code></pre>
<p>参考资料：</p>
<p>https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</p>
<p>http://www.manongjc.com/article/59408.html</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Manjaro修改中文目录为英文目录]]></title>
        <id>https://liuqi0202.github.io/post/manjaro-xiu-gai-zhong-wen-mu-lu-wei-ying-wen-mu-lu/</id>
        <link href="https://liuqi0202.github.io/post/manjaro-xiu-gai-zhong-wen-mu-lu-wei-ying-wen-mu-lu/">
        </link>
        <updated>2021-01-11T10:41:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="参考">参考</h3>
<p>https://segmentfault.com/a/1190000037454534</p>
<p>https://blog.csdn.net/no_o_ac/article/details/103939779</p>
<p>终端：</p>
<pre><code class="language-shell">vim .config/user-dirs.dirs
</code></pre>
<p>参考以上百度搜来的办法，然后干脆全手工在Dolphin里改。</p>
<h3 id="1-先删掉中文的目录">1、先删掉中文的目录</h3>
<figure data-type="image" tabindex="1"><img src="https://liuqi0202.github.io/post-images/1610361996112.jpg" alt="" loading="lazy"></figure>
<h3 id="2-在用户目录里新建">2、在用户目录里新建</h3>
<figure data-type="image" tabindex="2"><img src="https://liuqi0202.github.io/post-images/1610362043076.jpg" alt="" loading="lazy"></figure>
<h3 id="3-修改目录映射">3、修改目录映射</h3>
<figure data-type="image" tabindex="3"><img src="https://liuqi0202.github.io/post-images/1610362057906.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://liuqi0202.github.io/post-images/1610362064184.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Manjaro安装配置wps-office]]></title>
        <id>https://liuqi0202.github.io/post/manjaro-an-zhuang-pei-zhi-wps-office/</id>
        <link href="https://liuqi0202.github.io/post/manjaro-an-zhuang-pei-zhi-wps-office/">
        </link>
        <updated>2021-01-11T09:31:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="从aur进行安装用yay安装即可">从AUR进行安装，用yay安装即可</h3>
<pre><code class="language-shell">yay -S wps-office
</code></pre>
<p>pacman已经没有wps了，因此用上面命令安装会报错。</p>
<pre><code class="language-shell">sudo pacman -S wps-office
</code></pre>
<p>缺少字体报错，安装</p>
<pre><code class="language-shell">yay -S ttf-wps-fonts
</code></pre>
<h3 id="更改中文版">更改中文版</h3>
<figure data-type="image" tabindex="1"><img src="https://liuqi0202.github.io/post-images/1610358176107.jpg" alt="" loading="lazy"></figure>
<p>下载wps中文语言包</p>
<pre><code class="language-shell">sudo pacman -S wps-office-mui-zh-cn
</code></pre>
<p>安装中文语言包</p>
<h3 id="安装后发现wps打开文档还是没有宋体字等常用字体">安装后发现wps打开文档还是没有宋体字等常用字体</h3>
<p>通过搜索找到arch的wiki，里面啥都有，有问题优先去这里找答案吧。</p>
<p>https://wiki.archlinux.org/index.php/Microsoft_fonts_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</p>
<p>从Windows使用字体<br>
如果有一个安装了Windows的分区, 可以通过链接它们来使用其字体。</p>
<p>例如, Windows的C:\盘被挂载在/windows:</p>
<pre><code class="language-shell">ln -s /windows/Windows/Fonts /usr/share/fonts/WindowsFonts
</code></pre>
<p>然后重新生成字体缓存：</p>
<pre><code class="language-shell">fc-cache -f
</code></pre>
<p>或者,将Windows的字体复制到/usr/share/fonts:</p>
<pre><code class="language-shell">mkdir /usr/share/fonts/WindowsFonts

cp /windows/Windows/Fonts/* /usr/share/fonts/WindowsFonts

chmod 755 /usr/share/fonts/WindowsFonts/*
</code></pre>
<p>然后重新生成字体缓存：</p>
<pre><code class="language-shell">fc-cache -f 
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试]]></title>
        <id>https://liuqi0202.github.io/post/ce-shi/</id>
        <link href="https://liuqi0202.github.io/post/ce-shi/">
        </link>
        <updated>2021-01-10T08:13:52.000Z</updated>
        <content type="html"><![CDATA[<p>这是一个小测试</p>
<figure data-type="image" tabindex="1"><img src="https://liuqi0202.github.io/post-images/1610268845176.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
</feed>